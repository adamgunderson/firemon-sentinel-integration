# firemon_alerts.conf
# This configuration captures FireMon change detection alerts and triggers API fetch

# Define a parser for FireMon change detection messages
block parser firemon_change_parser() {
    # Extract the relevant parts from the FireMon change notification
    regexp(
        ".*\[FireMon\] (?<DEVICE_NAME>[^-]+) - [^-]+ - (?<CHANGES_COUNT>\d+) Changes Detected in Revision (?<REVISION_NUMBER>\d+) - (?<USERNAME>[^ ]+) - (?<CHANGE_TIMESTAMP>[^ \n]+)",
        flags("store-matches")
    );
};

# Define a filter for FireMon change detection messages
filter f_firemon_changes {
    match("[FireMon]" value("MESSAGE")) and 
    match("Changes Detected in Revision" value("MESSAGE"));
};

# Define destination to execute Python script
destination d_firemon_api_fetch {
    program("/usr/local/bin/firemon_api_fetch.py 
             --device-name=${DEVICE_NAME} 
             --revision=${REVISION_NUMBER} 
             --user=${USERNAME} 
             --timestamp=${CHANGE_TIMESTAMP} 
             --server=${HOST}"
            template("$(format-json --scope rfc5424 --scope nv-pairs)\n"));
};

# Log path for FireMon change detection
log {
    source(s_src); # Assuming s_src is defined elsewhere in the syslog-ng config
    filter(f_firemon_changes);
    parser(firemon_change_parser());
    destination(d_firemon_api_fetch);
    # Optional: send to other destinations like file storage
    # destination(d_firemon_file);
};